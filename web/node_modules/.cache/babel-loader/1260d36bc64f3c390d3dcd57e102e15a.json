{"ast":null,"code":"\"use strict\";\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _katex = require(\"katex\");\n\nvar _katex2 = _interopRequireDefault(_katex);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint-disable eslint-plugin-import */\n// Eslint doesn't like react being in peerDependencies\n//eslint-disable-line\n\n\nvar latexString = function latexString(string, options) {\n  // Remove potential HTML\n  string = string.replace(/(<([^>]+)>)/gi, \"\");\n  var regularExpression = /\\$\\$[\\s\\S]+?\\$\\$|\\$[\\s\\S]+?\\$/g;\n\n  var stripDollars = function stripDollars(stringToStrip) {\n    if (stringToStrip[1] === \"$\") {\n      stringToStrip = stringToStrip.slice(2, -2);\n    } else {\n      stringToStrip = stringToStrip.slice(1, -1);\n    }\n\n    return stringToStrip;\n  };\n\n  var renderLatexString = function renderLatexString(s) {\n    var renderedString = void 0;\n\n    try {\n      renderedString = _katex2.default.renderToString(s, options);\n    } catch (err) {\n      console.error(\"couldn`t convert string\", s);\n      return s;\n    }\n\n    return renderedString;\n  };\n\n  var result = [];\n  var latexMatch = string.match(regularExpression);\n  var stringWithoutLatex = string.split(regularExpression);\n\n  if (latexMatch) {\n    stringWithoutLatex.forEach(function (s, index) {\n      result.push({\n        string: s,\n        type: \"text\"\n      });\n\n      if (latexMatch[index]) {\n        result.push({\n          string: stripDollars(latexMatch[index]),\n          type: \"latex\"\n        });\n      }\n    });\n  } else {\n    result.push({\n      string: string,\n      type: \"text\"\n    });\n  }\n\n  var processResult = function processResult(resultToProcess) {\n    var newResult = resultToProcess.map(function (r) {\n      if (r.type === \"text\") {\n        return r.string;\n      }\n\n      return renderLatexString(r.string);\n    });\n    return newResult.join(\" \");\n  };\n\n  return processResult(result);\n};\n\nvar Latex = function (_React$Component) {\n  _inherits(Latex, _React$Component);\n\n  function Latex() {\n    _classCallCheck(this, Latex);\n\n    return _possibleConstructorReturn(this, (Latex.__proto__ || Object.getPrototypeOf(Latex)).apply(this, arguments));\n  }\n\n  _createClass(Latex, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          displayMode = _props.displayMode;\n      return _react2.default.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: latexString(children, {\n            displayMode: displayMode\n          })\n        }\n      });\n    }\n  }]);\n\n  return Latex;\n}(_react2.default.Component);\n\nLatex.propTypes = {\n  children: _propTypes2.default.string,\n  displayMode: _propTypes2.default.bool\n};\nLatex.defaultProps = {\n  children: \"\",\n  displayMode: false\n};\n\nif (module && module.exports) {\n  module.exports = Latex;\n} else {\n  window.Latex = Latex;\n}","map":null,"metadata":{},"sourceType":"script"}